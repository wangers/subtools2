#!/usr/bin/env bash

# fix segmentation fault reported in https://github.com/k2-fsa/icefall/issues/674
export PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python

set -eou pipefail

nj=15
stage=-1
stop_stage=11
perturb_speed=true

musandir=/tsdata/ASR
o_dir=data
. scripts/parse_options.sh || exit 1


# All files generated by this script are saved in "data".
# You can safely remove "data" and rerun this script to regenerate it.
mkdir -p ${o_dir}

log() {
  # This function is from espnet
  local fname=${BASH_SOURCE[1]##*/}
  echo -e "$(date '+%Y-%m-%d %H:%M:%S') (${fname}:${BASH_LINENO[0]}:${FUNCNAME[1]}) $*"
}


if [ $stage -le 1 ] && [ $stop_stage -ge 1 ]; then
  log "Stage 1: Prepare yuenan manifest"

  if [ ! -f ${o_dir}/manifests/.yuenan_manifests.done ]; then
    mkdir -p ${o_dir}/manifests
    for part in train test val; do
      python ./local/kaldi2mani.py data/kaldi_dir/aishell_yuenan/${part} \
        --output_dir ${o_dir}/manifests \
        --prefix aishell_vi --part $part
    done
    touch ${o_dir}/manifests/.yuenan_manifests.done
  fi
fi

if [ $stage -le 2 ] && [ $stop_stage -ge 2 ]; then
  log "Stage 2: Prepare musan manifest"
  # We assume that you have downloaded the musan corpus
  # to ${o_dir}/musan
  if [ ! -f ${o_dir}/manifests/.musan_manifests.done ]; then
    log "It may take 6 minutes"
    mkdir -p ${o_dir}/manifests
    lhotse prepare musan $musandir/musan ${o_dir}/manifests
    touch ${o_dir}/manifests/.musan_manifests.done
  fi
fi


# whisper large-v3 using 128 mel bins, others using 80 mel bins
whisper_mel_bins=80
output_dir=${o_dir}/fbank_whisper
feat_dir=/home/ldx/feats/fbank_whisper${whisper_mel_bins}
feat_dir=data/fbank_whisper${whisper_mel_bins}
if [ $stage -le 3 ] && [ $stop_stage -ge 3 ]; then
  log "Stage 3: Compute ${whisper_mel_bins} dim fbank for whisper model fine-tuning"
  mkdir -p $feat_dir
  if [ ! -f $feat_dir/.musan.whisper.done ]; then
    ./local/compute_fbank_musan.py --num-mel-bins ${whisper_mel_bins} --whisper-fbank true --output-dir $feat_dir
    touch $feat_dir/.musan.whisper.done
  fi
  if [ ! -f $feat_dir/.aishell_vi.whisper.done ]; then
    python ./local/compute_fbank_subset.py \
      --num_mel_bins ${whisper_mel_bins} \
      --whisper_fbank true \
      --output_dir $feat_dir \
      --perturb_speed ${perturb_speed} \
      --prefix aishell_vi \
      --parts train,val,test \
      --device cpu

    touch $feat_dir/.aishell_vi.whisper.done
  fi
  python ./local/seprate_lang.py --num_mel_bins ${whisper_mel_bins} --feats_dir $feat_dir/olr21_test --whisper_fbank true

fi
